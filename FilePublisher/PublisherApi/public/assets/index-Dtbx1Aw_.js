var c=Object.defineProperty;var a=(r,e,s)=>e in r?c(r,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[e]=s;var o=(r,e,s)=>a(r,typeof e!="symbol"?e+"":e,s);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const l of i.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&n(l)}).observe(document,{childList:!0,subtree:!0});function s(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(t){if(t.ep)return;t.ep=!0;const i=s(t);fetch(t.href,i)}})();class d{constructor(){o(this,"sessionInput");o(this,"fileSelect");o(this,"contentDisplay");o(this,"copyButton");o(this,"currentSessionId","");o(this,"currentETag","");o(this,"refreshInterval",null);o(this,"rawFileContent","");this.setupUI(),this.setupEventListeners();const e=localStorage.getItem("lastSessionId");e&&(this.sessionInput.value=e,this.loadFiles())}setupUI(){const e=document.querySelector("#app");e.innerHTML=`
      <div class="title-bar">
        <div class="controls">
          <input type="text" id="session-id" placeholder="Enter session ID" />
          <button id="load-files">Load Files</button>
          <select id="file-select"></select>
          <button id="refresh-file">Refresh File</button>
          <button id="copy-content">Copy to Clipboard</button>
        </div>
      </div>
      <div class="content-area">
        <pre id="content-display"><code class="language-typescript"></code></pre>
      </div>
    `,this.sessionInput=document.querySelector("#session-id"),this.fileSelect=document.querySelector("#file-select"),this.contentDisplay=document.querySelector("#content-display"),this.copyButton=document.querySelector("#copy-content")}setupEventListeners(){document.querySelector("#load-files").addEventListener("click",()=>this.loadFiles()),document.querySelector("#refresh-file").addEventListener("click",()=>this.loadSelectedFile()),document.querySelector("#copy-content").addEventListener("click",()=>this.copyContentToClipboard()),this.fileSelect.addEventListener("change",()=>{this.loadSelectedFile(),this.setupAutoRefresh()})}setupAutoRefresh(){this.refreshInterval&&clearInterval(this.refreshInterval),this.refreshInterval=setInterval(()=>{this.loadSelectedFile()},3e4)}async loadFiles(){if(this.currentSessionId=this.sessionInput.value.trim(),!this.currentSessionId)return;this.currentETag="",this.refreshInterval&&clearInterval(this.refreshInterval);const e=this.fileSelect.value;try{const n=await(await fetch(`files/sessions/${this.currentSessionId}`)).json();localStorage.setItem("lastSessionId",this.currentSessionId),this.fileSelect.innerHTML=n.files.map(t=>`<option value="${t}">${t}</option>`).join(""),n.files.length>0&&(e&&n.files.includes(e)&&(this.fileSelect.value=e),this.loadSelectedFile(),this.setupAutoRefresh())}catch(s){console.error("Error loading files:",s),this.contentDisplay.textContent="Error loading files"}}async loadSelectedFile(){const e=this.fileSelect.value;if(!(!e||!this.currentSessionId))try{const s={};this.currentETag&&(s["If-None-Match"]=this.currentETag);const n=await fetch(`files/sessions/${this.currentSessionId}/file?file=${encodeURIComponent(e)}`,{headers:s});if(n.status===304)return;const t=n.headers.get("ETag");t&&(this.currentETag=t);const i=await n.json();this.rawFileContent=i.content;const l=this.contentDisplay.querySelector("code");l.textContent=i.content,l.removeAttribute("data-highlighted"),hljs.highlightAll(),hljs.initLineNumbersOnLoad()}catch(s){console.error("Error loading file content:",s),this.contentDisplay.textContent="Error loading file content",this.rawFileContent=""}}async copyContentToClipboard(){if(this.rawFileContent)try{await navigator.clipboard.writeText(this.rawFileContent);const e=this.copyButton.textContent;this.copyButton.textContent="Copied!",this.copyButton.disabled=!0,setTimeout(()=>{this.copyButton.textContent=e,this.copyButton.disabled=!1},2e3)}catch(e){console.error("Failed to copy content: ",e)}}}new d;
